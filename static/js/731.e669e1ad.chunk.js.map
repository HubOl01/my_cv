{"version":3,"file":"static/js/731.e669e1ad.chunk.js","mappings":"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","sources":["components/reusable/Button.jsx","components/contact/ContactDetails.jsx","../node_modules/emailjs-com/es/store/store.js","../node_modules/emailjs-com/es/utils/validateParams.js","../node_modules/emailjs-com/es/models/EmailJSResponseStatus.js","../node_modules/emailjs-com/es/api/sendPost.js","../node_modules/emailjs-com/es/index.js","../node_modules/emailjs-com/es/methods/sendForm/sendForm.js","components/reusable/FormInput.jsx","components/contact/ContactForm.jsx","pages/Contact.jsx"],"sourcesContent":["function Button({ title }) {\n  return <button className=\"w-full h-full px-4 py-2.5\">{title}</button>;\n}\n\nexport default Button;\n","import { FiMail } from \"react-icons/fi\";\nimport { FaVk, FaTelegramPlane } from \"react-icons/fa\";\nconst contacts = [\n  //   {\n  //     id: 1,\n  //     name: \"Your Address, Your City, Your Country\",\n  //     icon: <FiMapPin />,\n  //   },\n  {\n    id: 1,\n    name: \"ru-developer@mail.ru\",\n    url: \"mailto:ru-developer@mail.ru\",\n    icon: <FiMail />,\n  },\n  {\n    id: 2,\n    name: \"@oleg01f\",\n    url: \"https://vk.com/oleg01f\",\n    icon: <FaVk />,\n  },\n  {\n    id: 3,\n    name: \"@foward01\",\n    url: \"https://t.me/foward01\",\n    icon: <FaTelegramPlane />,\n  },\n];\n\nconst ContactDetails = () => {\n  return (\n    <div className=\"w-full lg:w-1/2\">\n      <div className=\"text-left max-w-xl px-6\">\n        <h2 className=\"font-general-medium text-2xl text-primary-dark dark:text-primary-light mt-12 mb-8\">\n          Контактная информация\n        </h2>\n        <ul className=\"font-general-regular\">\n          {contacts.map((contact) => (\n            <a href={contact.url} target=\"_blank\">\n              <li className=\"flex \" key={contact.id}>\n                <i className=\"text-2xl text-gray-500 dark:text-gray-400 mr-4\">\n                  {contact.icon}\n                </i>\n                <span className=\"text-lg mb-4 text-ternary-dark dark:text-ternary-light\">\n                  {contact.name}\n                </span>\n              </li>\n            </a>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default ContactDetails;\n","export const store = {\n    _origin: 'https://api.emailjs.com',\n};\n","export const validateParams = (userID, serviceID, templateID) => {\n    if (!userID) {\n        throw 'The user ID is required. Visit https://dashboard.emailjs.com/admin/integration';\n    }\n    if (!serviceID) {\n        throw 'The service ID is required. Visit https://dashboard.emailjs.com/admin';\n    }\n    if (!templateID) {\n        throw 'The template ID is required. Visit https://dashboard.emailjs.com/admin/templates';\n    }\n    return true;\n};\n","export class EmailJSResponseStatus {\n    constructor(httpResponse) {\n        this.status = httpResponse.status;\n        this.text = httpResponse.responseText;\n    }\n}\n","import { EmailJSResponseStatus } from '../models/EmailJSResponseStatus';\nimport { store } from '../store/store';\nexport const sendPost = (url, data, headers = {}) => {\n    return new Promise((resolve, reject) => {\n        const xhr = new XMLHttpRequest();\n        xhr.addEventListener('load', ({ target }) => {\n            const responseStatus = new EmailJSResponseStatus(target);\n            if (responseStatus.status === 200 || responseStatus.text === 'OK') {\n                resolve(responseStatus);\n            }\n            else {\n                reject(responseStatus);\n            }\n        });\n        xhr.addEventListener('error', ({ target }) => {\n            reject(new EmailJSResponseStatus(target));\n        });\n        xhr.open('POST', store._origin + url, true);\n        Object.keys(headers).forEach((key) => {\n            xhr.setRequestHeader(key, headers[key]);\n        });\n        xhr.send(data);\n    });\n};\n","import { init } from './methods/init/init';\nimport { send } from './methods/send/send';\nimport { sendForm } from './methods/sendForm/sendForm';\nexport { init, send, sendForm };\nexport default {\n    init,\n    send,\n    sendForm,\n};\n","import { store } from '../../store/store';\nimport { validateParams } from '../../utils/validateParams';\nimport { sendPost } from '../../api/sendPost';\nconst findHTMLForm = (form) => {\n    let currentForm;\n    if (typeof form === 'string') {\n        currentForm = document.querySelector(form);\n    }\n    else {\n        currentForm = form;\n    }\n    if (!currentForm || currentForm.nodeName !== 'FORM') {\n        throw 'The 3rd parameter is expected to be the HTML form element or the style selector of form';\n    }\n    return currentForm;\n};\n/**\n * Send a form the specific EmailJS service\n * @param {string} serviceID - the EmailJS service ID\n * @param {string} templateID - the EmailJS template ID\n * @param {string | HTMLFormElement} form - the form element or selector\n * @param {string} userID - the EmailJS user ID\n * @returns {Promise<EmailJSResponseStatus>}\n */\nexport const sendForm = (serviceID, templateID, form, userID) => {\n    const uID = userID || store._userID;\n    const currentForm = findHTMLForm(form);\n    validateParams(uID, serviceID, templateID);\n    const formData = new FormData(currentForm);\n    formData.append('lib_version', '3.2.0');\n    formData.append('service_id', serviceID);\n    formData.append('template_id', templateID);\n    formData.append('user_id', uID);\n    return sendPost('/api/v1.0/email/send-form', formData);\n};\n","import React from 'react';\n\nconst FormInput = ({\n\tinputLabel,\n\tlabelFor,\n\tinputType,\n\tinputId,\n\tinputName,\n\tplaceholderText,\n\tariaLabelName,\n}) => {\n\treturn (\n\t\t<div className=\"font-general-regular mb-4\">\n\t\t\t<label\n\t\t\t\tclassName=\"block text-lg text-primary-dark dark:text-primary-light mb-1\"\n\t\t\t\thtmlFor={labelFor}\n\t\t\t>\n\t\t\t\t{inputLabel}\n\t\t\t</label>\n\t\t\t<input\n\t\t\t\tclassName=\"w-full px-5 py-2 border border-gray-300 dark:border-primary-dark border-opacity-50 text-primary-dark dark:text-secondary-light bg-ternary-light dark:bg-ternary-dark rounded-md shadow-sm text-md\"\n\t\t\t\ttype={inputType}\n\t\t\t\tid={inputId}\n\t\t\t\tname={inputName}\n\t\t\t\tplaceholder={placeholderText}\n\t\t\t\taria-label={ariaLabelName}\n\t\t\t\trequired\n\t\t\t/>\n\t\t</div>\n\t);\n};\n\nexport default FormInput;\n","import emailjs from \"emailjs-com\";\nimport Button from \"../reusable/Button\";\nimport FormInput from \"../reusable/FormInput\";\nimport { useState } from \"react\";\n\nconst ContactForm = () => {\n  const [formData, setFormData] = useState({\n    name: \"\",\n    email: \"\",\n    subject: \"\",\n    message: \"\",\n  });\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormData({ ...formData, [name]: value });\n  };\n\n  const sendEmail = (e) => {\n    e.preventDefault();\n\n    emailjs\n      .sendForm(\n        \"service_hnyi8b9\", // замените на ваш ID сервиса\n        \"template_f2r58a9\", // замените на ваш ID шаблона\n        e.target,\n        \"b90ukqwzUfEoXIQ8l\" // замените на ваш User ID из Email.js\n      )\n      .then(\n        (result) => {\n          console.log(result.text);\n          alert(\"Сообщение отправлено успешно!\");\n        },\n        (error) => {\n          console.log(error.text);\n          alert(\"Ошибка при отправке сообщения.\");\n        }\n      );\n  };\n\n  return (\n    <div className=\"w-full lg:w-1/2\">\n      <div className=\"leading-loose\">\n        <form\n          onSubmit={sendEmail}\n          className=\"max-w-xl m-4 p-6 sm:p-10 bg-secondary-light dark:bg-secondary-dark rounded-xl shadow-xl text-left\"\n        >\n          <p className=\"font-general-medium text-primary-dark dark:text-primary-light text-2xl mb-4\">\n            Контактная форма\n          </p>\n          <p className=\"font-general-medium text-primary-dark dark:text-primary-light text-sm mb-6\">\n            * Также Вы можете получить мое резюме прямо в свой почтовый ящик\n          </p>\n          <FormInput\n            inputLabel=\"Полное имя\"\n            labelFor=\"name\"\n            inputType=\"text\"\n            inputId=\"name\"\n            inputName=\"name\"\n            value={formData.name}\n            onChange={handleChange}\n            placeholderText=\"Твое имя\"\n            ariaLabelName=\"Name\"\n          />\n          <FormInput\n            inputLabel=\"Email\"\n            labelFor=\"email\"\n            inputType=\"email\"\n            inputId=\"email\"\n            inputName=\"email\"\n            value={formData.email}\n            onChange={handleChange}\n            placeholderText=\"Твой email\"\n            ariaLabelName=\"Email\"\n          />\n          <FormInput\n            inputLabel=\"Тема\"\n            labelFor=\"subject\"\n            inputType=\"text\"\n            inputId=\"subject\"\n            inputName=\"subject\"\n            value={formData.subject}\n            onChange={handleChange}\n            placeholderText=\"Тема\"\n            ariaLabelName=\"Subject\"\n          />\n          <div className=\"mt-6\">\n            <label\n              className=\"block text-lg text-primary-dark dark:text-primary-light mb-2\"\n              htmlFor=\"message\"\n            >\n              Сообщение\n            </label>\n            <textarea\n              className=\"w-full px-5 py-2 border border-gray-300 dark:border-primary-dark border-opacity-50 text-primary-dark dark:text-secondary-light bg-ternary-light dark:bg-ternary-dark rounded-md shadow-sm text-md\"\n              id=\"message\"\n              name=\"message\"\n              value={formData.message}\n              onChange={handleChange}\n              cols=\"14\"\n              rows=\"6\"\n              aria-label=\"Message\"\n            ></textarea>\n          </div>\n\n          <div className=\"font-general-medium w-100  text-white text-center font-medium tracking-wider bg-indigo-500 hover:bg-indigo-600 focus:ring-1 focus:ring-indigo-900 rounded-lg mt-6 duration-500\">\n            <Button\n              title=\"Отправить сообщение\"\n              type=\"submit\"\n              aria-label=\"Send Message\"\n            />\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default ContactForm;\n","import { motion } from \"framer-motion\";\nimport ContactDetails from \"../components/contact/ContactDetails\";\nimport ContactForm from \"../components/contact/ContactForm\";\n\nconst Contact = () => {\n  return (\n    <motion.div\n      initial={{ opacity: 0 }}\n      animate={{ opacity: 1 }}\n      transition={{\n        ease: \"easeInOut\",\n        duration: 0.5,\n        delay: 0.1,\n      }}\n      className=\"container mx-auto flex flex-col-reverse lg:flex-row py-5 lg:py-10 lg:mt-10\"\n    >\n      <ContactForm />\n      <ContactDetails />\n    </motion.div>\n  );\n};\n\nexport default Contact;\n"],"names":["_ref","title","_jsx","className","children","contacts","id","name","url","icon","FiMail","FaVk","FaTelegramPlane","ContactDetails","_jsxs","map","contact","href","target","store","_origin","validateParams","userID","serviceID","templateID","EmailJSResponseStatus","constructor","httpResponse","this","status","text","responseText","sendPost","data","headers","arguments","length","undefined","Promise","resolve","reject","xhr","XMLHttpRequest","addEventListener","responseStatus","_ref2","open","Object","keys","forEach","key","setRequestHeader","send","sendForm","form","uID","_userID","currentForm","document","querySelector","nodeName","findHTMLForm","formData","FormData","append","inputLabel","labelFor","inputType","inputId","inputName","placeholderText","ariaLabelName","htmlFor","type","placeholder","required","ContactForm","setFormData","useState","email","subject","message","handleChange","e","value","onSubmit","preventDefault","emailjs","then","result","console","log","alert","error","FormInput","onChange","cols","rows","Button","Contact","motion","div","initial","opacity","animate","transition","ease","duration","delay"],"sourceRoot":""}